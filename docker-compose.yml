services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"  # Exposé pour le développement direct
    volumes:
      # Mount backend source code for live reload
      - ./backend:/app/backend
    env_file:
      # Pass environment variables from .env file
      - ./.env 
    # Dépend du service frontend pour s'assurer qu'il est lancé (optionnel mais peut aider)
    # depends_on:
    #   - frontend
    networks:
      - athly-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"  # Exposé directement pour le développement
    volumes:
      # Mount frontend source code for live reload
      - ./frontend:/app/frontend
      # Eviter de monter node_modules de l'hôte
      - /app/frontend/node_modules
    environment:
      # Assure que le serveur de dev React fonctionne bien avec Docker
      - WATCHPACK_POLLING=true
    depends_on:
      - backend # Frontend démarre après le backend (pour les appels API)
    networks:
      - athly-network
    # Ne pas exposer le port directement - nginx servira l'application

  # nginx:
  #   build:
  #     context: .
  #     dockerfile: nginx.Dockerfile
  #   ports:
  #     - "3000:80"
  #   depends_on:
  #     - backend
  #     - frontend
  #   networks:
  #     - athly-network

networks:
  athly-network:
    driver: bridge 